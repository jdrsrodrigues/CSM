@page "/login"
@using CSMDashboard.Client.Features.Auth
@using CSMDashboard.Client.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject AuthService AuthService
@inject TokenService TokenService
@inject AuthenticationStateProvider AuthProvider

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email</label>
        <InputText @bind-Value="loginModel.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label>Senha</label>
        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Entrar</button>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">@errorMessage</div>
    }
</EditForm>




@code {
    private LoginDto loginModel = new();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var token = await AuthService.LoginAsync(loginModel);

        if (!string.IsNullOrEmpty(token))
        {
            await TokenService.SetTokenAsync(token);
            ((CustomAuthProvider)AuthProvider).NotifyUserAuthentication(token);
            Navigation.NavigateTo("/alertas");
        }
        else
        {
            errorMessage = "Credenciais inválidas.";
        }
    }
}
